/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Bai10_StudentManager;

import com.sun.org.apache.bcel.internal.generic.GOTO;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author NGOC TY
 */
public class StudentManageJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentManageJFrame
     */
    public StudentManageJFrame() {
        initComponents();
    }
    Manage ma=new Manage();
    Student student=new Student();
    Boolean checkExist=false;
    Boolean checkClass1=false;
    Boolean checkClass2=false;
    Boolean checkCourse1=false;
    Boolean checkCourse2=false;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbID = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        lbName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lbPhone = new javax.swing.JLabel();
        tfPhone = new javax.swing.JTextField();
        lbBirthday = new javax.swing.JLabel();
        tfBirthday = new javax.swing.JTextField();
        lbGender = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cbGirl = new javax.swing.JCheckBox();
        cbBoy = new javax.swing.JCheckBox();
        lbClass = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbClass1 = new javax.swing.JCheckBox();
        cbClass2 = new javax.swing.JCheckBox();
        btAdd = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cbCourse1 = new javax.swing.JCheckBox();
        cbCourse2 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        btUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("StudentManagement");

        lbID.setText("ID");

        tfID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfIDMouseClicked(evt);
            }
        });
        tfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDActionPerformed(evt);
            }
        });

        lbName.setText("Name");

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        lbPhone.setText("Phone");

        tfPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPhoneActionPerformed(evt);
            }
        });

        lbBirthday.setText("Birthday");

        tfBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBirthdayActionPerformed(evt);
            }
        });

        lbGender.setText("Gender");

        cbGirl.setText("Girl");
        cbGirl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGirlActionPerformed(evt);
            }
        });

        cbBoy.setText("Boy");
        cbBoy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBoyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbGirl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbBoy)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbGirl)
                    .addComponent(cbBoy))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbClass.setText("Class");

        cbClass1.setText("D17CQCN01");
        cbClass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClass1ActionPerformed(evt);
            }
        });

        cbClass2.setText("D17CQCN02");
        cbClass2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClass2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbClass2)
                    .addComponent(cbClass1))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbClass1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbClass2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btAdd.setText("ADD");
        btAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAddMouseClicked(evt);
            }
        });
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                btDeleteMouseDragged(evt);
            }
        });
        btDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDeleteMouseClicked(evt);
            }
        });
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        cbCourse1.setText("M101");
        cbCourse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCourse1ActionPerformed(evt);
            }
        });

        cbCourse2.setText("M102");
        cbCourse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCourse2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbCourse1)
                .addGap(18, 18, 18)
                .addComponent(cbCourse2)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCourse1)
                    .addComponent(cbCourse2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("RegisterCourse");

        btUpdate.setText("Update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbID)
                            .addComponent(lbPhone))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfID)
                            .addComponent(tfPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbName)
                            .addComponent(lbBirthday))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(tfBirthday)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbGender)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btAdd)
                                .addGap(65, 65, 65)
                                .addComponent(btDelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbClass)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(btUpdate)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbID)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPhone)
                    .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBirthday)
                    .addComponent(tfBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGender)
                    .addComponent(lbClass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btUpdate)
                    .addComponent(btDelete)
                    .addComponent(btAdd))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCourse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCourse2ActionPerformed
        if(cbCourse2.isSelected()){
            student.setCourse(Student.codeCourse2);
            checkCourse2=true;
            cbCourse1.setSelected(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCourse2ActionPerformed

    private void tfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDActionPerformed
        try {
            ma.readFileClass(ma.getLinkClass1());
            ma.readFileClass(ma.getLinkClass2());
            ma.readFileCourse(ma.getLinkCourse1());
            ma.readFileCourse(ma.getLinkCourse2());  
            
        } catch (IOException ex) {
            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        student.setID(tfID.getText());
        Boolean kt1=false;
        for(Student st: ma.class1List){
            if(student.getID().equals(st.getID())){
                //student=st;
                student.setID(st.getID());
                student.setName(st.getName());
                student.setPhoneNumber(st.getPhoneNumber());
                student.setBirthday(st.getBirthday());
                student.setClasses(st.getClasses());
                student.setCourse(st.getCourse());
                student.setGender(st.getGender());
                kt1=true;
                checkExist=true;
                checkClass1=true;
                tfName.setText(student.getName());
                tfPhone.setText(student.getPhoneNumber());
                tfBirthday.setText(student.getBirthday());
                if("Nu".equals(student.getGender())){
                cbGirl.setSelected(true);
                }
                else cbBoy.setSelected(true);
                if(Student.nameClass1.equals(student.getClasses())){
                    cbClass1.setSelected(true);
                }
                else cbClass2.setSelected(true);
                break;
            }
        }
        if(kt1==false){
            for(Student st: ma.class2List){
                if(student.getID().equals(st.getID())){
                    //student=st;
                    student.setID(st.getID());
                    student.setName(st.getName());
                    student.setPhoneNumber(st.getPhoneNumber());
                    student.setBirthday(st.getBirthday());
                    student.setClasses(st.getClasses());
                    student.setCourse(st.getCourse()); 
                    student.setGender(st.getGender());
                    kt1=true;
                    checkExist=true;
                    checkClass2=true;
                    tfName.setText(student.getName());
                    tfPhone.setText(student.getPhoneNumber());
                    tfBirthday.setText(student.getBirthday());
                    if("Nu".equals(student.getGender())){
                    cbGirl.setSelected(true);
                    }
                    else cbBoy.setSelected(true);
                    if("D17CQCN01".equals(student.getClasses())){
                        cbClass1.setSelected(true);
                    }
                    else cbClass2.setSelected(true);
                    break;
                }
            }
        }
       if(checkClass1 || checkClass2){
            Boolean kt=false;
            for(Student s: ma.studentCourse1List){
                if(student.getID().equals(s.getID())){
                    cbCourse1.setSelected(true);
                    student.setCourse(s.getCourse());
                    kt=true;
                    break;
                }
            }
            for(Student s: ma.studentCourse2List){
                if(student.getID().equals(s.getID())){
                    cbCourse2.setSelected(true);
                    student.setCourse(s.getCourse());
                    kt=true;
                    break;
                }
            }    
       }

        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        student.setName(tfName.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void tfPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPhoneActionPerformed
        student.setPhoneNumber(tfPhone.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPhoneActionPerformed

    private void tfBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBirthdayActionPerformed
        student.setBirthday(tfBirthday.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBirthdayActionPerformed

    private void cbGirlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGirlActionPerformed
        if(cbGirl.isSelected()){
            student.setGender("Nu");
            cbBoy.setSelected(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGirlActionPerformed

    private void cbBoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBoyActionPerformed
        if(cbBoy.isSelected()){
            student.setGender("Nam");
            cbGirl.setSelected(false);
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_cbBoyActionPerformed

    private void cbClass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClass1ActionPerformed
        if(cbClass1.isSelected()){
            if( !checkExist){
            student.setClasses(Student.nameClass1);
            cbClass2.setSelected(false);
            }
            else cbClass1.setSelected(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClass1ActionPerformed

    private void cbClass2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClass2ActionPerformed
        if(cbClass2.isSelected() && !checkExist){
            if(!checkExist){
            student.setClasses(Student.nameClass2);
            cbClass1.setSelected(false);
            }
            else cbClass2.setSelected(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClass2ActionPerformed

    private void cbCourse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCourse1ActionPerformed
        if(cbCourse1.isSelected()){
            student.setCourse(Student.codeCourse1);
            cbCourse2.setSelected(false);
            checkCourse1=true;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCourse1ActionPerformed

    private void tfIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfIDMouseClicked
        tfID.setText("");
        tfName.setText("");
        tfPhone.setText("");
        tfBirthday.setText("");
        cbClass1.setSelected(false);
        cbClass2.setSelected(false);
        cbCourse1.setSelected(false);
        cbCourse2.setSelected(false);
        cbBoy.setSelected(false);
        cbGirl.setSelected(false);
        checkExist=false;
        checkClass1=false;
        checkClass2=false;
        checkCourse1=false;
        checkCourse2=false;
        student.setID(null);
        student.setName(null);
        student.setBirthday(null);
        student.setClasses(null);
        student.setPhoneNumber(null);
        student.setCourse(null);
        student.setGender(null);
        ma.class1List.clear();
        ma.class2List.clear();
        ma.studentCourse1List.clear();
        ma.studentCourse2List.clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDMouseClicked

    private void btAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAddMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_btAddMouseClicked

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        if(checkExist==false){
            if(student.getClasses().equals(Student.nameClass1)){
                ma.class1List.add(student);
                try {
                    ma.writeFileClass(ma.getLinkClass1());
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{ 
                ma.class2List.add(student);
                try {
                    ma.writeFileClass(ma.getLinkClass2());
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            if(student.getCourse().equals(Student.codeCourse1)){
                ma.studentCourse1List.add(student);
                try {
                    ma.writeFileCourse(ma.getLinkCourse1());
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(student.getCourse().equals(Student.codeCourse2)){
                ma.studentCourse2List.add(student);
                try {
                    ma.writeFileCourse(ma.getLinkCourse2());
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            

        }
        tfID.setText("");
        tfName.setText("");
        tfPhone.setText("");
        tfBirthday.setText("");
        cbClass1.setSelected(false);
        cbClass2.setSelected(false);
        cbCourse1.setSelected(false);
        cbCourse2.setSelected(false);
        cbBoy.setSelected(false);
        cbGirl.setSelected(false);
        checkExist=false;
        checkClass1=false;
        checkClass2=false;
        checkCourse1=false;
        checkCourse2=false;
        // TODO add your handling code here:
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        if(checkExist){
            if(checkClass1){
                for(Student st: ma.class1List){
                    if(student.getID().equals(st.getID())){
                        for(Student sd: ma.studentCourse1List){
                            if(st.getID().equals(sd.getID())){
                                ma.studentCourse1List.remove(sd);
                                break;
                            }
                        }
                        for(Student sd: ma.studentCourse2List){
                            if(st.getID().equals(sd.getID())){
                                ma.studentCourse2List.remove(sd);
                                break;
                            }
                        }
                        ma.class1List.remove(st);
                        try {
                            ma.writeFileClass(ma.getLinkClass1());
                            ma.writeFileCourse(ma.getLinkCourse1());
                            ma.writeFileCourse(ma.getLinkCourse2());
                            //ma.class1List.clear();
                        } catch (UnsupportedEncodingException ex) {
                            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                }
            }
            else{
                    for(Student st: ma.class2List){
                        if(student.getID().equals(st.getID())){
                            for(Student sd: ma.studentCourse1List){
                                if(st.getID().equals(sd.getID())){
                                    ma.studentCourse1List.remove(sd);
                                    break;
                                }
                              }
                            for(Student sd: ma.studentCourse2List){
                                if(st.getID().equals(sd.getID())){
                                    ma.studentCourse2List.remove(sd);
                                    break;
                                }
                            }                            
                            ma.class2List.remove(st);
                            try {
                                ma.writeFileClass(ma.getLinkClass2());
                                ma.writeFileCourse(ma.getLinkCourse1());
                                ma.writeFileCourse(ma.getLinkCourse2());
                                //ma.class2List.clear();
                            } catch (UnsupportedEncodingException ex) {
                                Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IOException ex) {
                                Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            break;
                        }
                    }
            }
        }
        tfID.setText("");
        tfName.setText("");
        tfPhone.setText("");
        tfBirthday.setText("");
        cbClass1.setSelected(false);
        cbClass2.setSelected(false);
        cbCourse1.setSelected(false);
        cbCourse2.setSelected(false);
        cbBoy.setSelected(false);
        cbGirl.setSelected(false);
        checkExist=false;
        checkClass1=false;
        checkClass2=false;
        checkCourse1=false;
        checkCourse2=false;
        // TODO add your handling code here:
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDeleteMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_btDeleteMouseClicked

    private void btDeleteMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDeleteMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_btDeleteMouseDragged

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed

        if(checkExist){
            if(checkClass1){
                for(Student st: ma.class1List){
                    if(student.getID().equals(st.getID()))
                    {
                        Boolean kt=false;
                        for(Student sd: ma.studentCourse1List){
                            if(st.getID().equals(sd.getID()) && student.getCourse().equals(Student.codeCourse2)){
                                ma.studentCourse1List.remove(sd);
                                ma.studentCourse2List.add(student);
                                kt=true;
                                break;
                            }
                        }
                        if(kt==false){
                            for(Student sd: ma.studentCourse2List){
                                if(st.getID().equals(sd.getID()) && student.getCourse().equals(Student.codeCourse1)){
                                    ma.studentCourse2List.remove(sd);
                                    ma.studentCourse1List.add(student);
                                    kt=true;
                                    break;
                                }
                            }
                        } 
                        if(kt==false){
                            if(checkCourse1){
                                ma.studentCourse1List.add(student);
                            }
                            else if(checkCourse2){
                                ma.studentCourse2List.add(student);
                            }
                        }
                        st.setID(student.getID());
                        st.setName(student.getName());
                        st.setPhoneNumber(student.getPhoneNumber());
                        st.setBirthday(student.getBirthday());
                        st.setClasses(student.getClasses());
                        st.setCourse(student.getCourse());
                        st.setGender(student.getGender());
                        try {
                            ma.writeFileClass(ma.getLinkClass1());
                            ma.writeFileCourse(ma.getLinkCourse1());
                            ma.writeFileCourse(ma.getLinkCourse2());
                        } catch (UnsupportedEncodingException ex) {
                            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        break;
                    }
       
                }
            }
            else
            {
                System.out.println("\tStudent nhap ");
                student.output();
                for(Student st: ma.class2List){
                    if(student.getID().equals(st.getID()))
                    {
                        System.out.println("\tStudent tim duoc");
                        st.output();
                        Boolean kt=false;
                        for(Student sd: ma.studentCourse1List){
                            if(st.getID().equals(sd.getID()) && student.getCourse().equals(Student.codeCourse2)){
                                ma.studentCourse1List.remove(sd);
                                ma.studentCourse2List.add(student);
                                kt=true;
                                break;
                            }
                        }
                        if(kt==false){
                            for(Student sd: ma.studentCourse2List){
                                if(st.getID().equals(sd.getID()) && student.getCourse().equals(Student.codeCourse1)){
                                    ma.studentCourse2List.remove(sd);
                                    ma.studentCourse1List.add(student);
                                    kt=true;
                                    break;
                                }
                            }
                        } 
                        if(kt==false){
                            if(checkCourse1){
                                ma.studentCourse1List.add(student);
                            }
                            else if(checkCourse2){
                                ma.studentCourse2List.add(student);
                            }
                        }
                        st.setID(student.getID());
                        st.setName(student.getName());
                        st.setPhoneNumber(student.getPhoneNumber());
                        st.setBirthday(student.getBirthday());
                        st.setClasses(student.getClasses());
                        st.setCourse(student.getCourse());
                        st.setGender(student.getGender());
                        System.out.println("Student sau khi cap nhat");
                        st.output();
                        try {
                            ma.writeFileClass(ma.getLinkClass2());
                            ma.writeFileCourse(ma.getLinkCourse1());
                            ma.writeFileCourse(ma.getLinkCourse2());
                        } catch (UnsupportedEncodingException ex) {
                            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(StudentManageJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        break;
                    }
       
                }
            }
   
        }
        tfID.setText("");
        tfName.setText("");
        tfPhone.setText("");
        tfBirthday.setText("");
        cbClass1.setSelected(false);
        cbClass2.setSelected(false);
        cbCourse1.setSelected(false);
        cbCourse2.setSelected(false);
        cbBoy.setSelected(false);
        cbGirl.setSelected(false);
        checkExist=false;
        checkClass1=false;
        checkClass2=false;
        checkCourse1=false;    
        checkCourse2=false;
        // TODO add your handling code here:
    }//GEN-LAST:event_btUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentManageJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentManageJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentManageJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentManageJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentManageJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btUpdate;
    private javax.swing.JCheckBox cbBoy;
    private javax.swing.JCheckBox cbClass1;
    private javax.swing.JCheckBox cbClass2;
    private javax.swing.JCheckBox cbCourse1;
    private javax.swing.JCheckBox cbCourse2;
    private javax.swing.JCheckBox cbGirl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbBirthday;
    private javax.swing.JLabel lbClass;
    private javax.swing.JLabel lbGender;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPhone;
    private javax.swing.JTextField tfBirthday;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPhone;
    // End of variables declaration//GEN-END:variables
}
